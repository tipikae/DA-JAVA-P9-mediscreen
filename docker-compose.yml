version: '3.9'

services:

  mysql-kc:
    container_name: mysql-kc
    image: mysql:8.0.27
    ports:
      - 3307:3306
    restart: on-failure
    environment:
      MYSQL_USER: tipikae
      MYSQL_PASSWORD: 231045
      MYSQL_DATABASE: keycloak
      MYSQL_ROOT_PASSWORD: root
    cap_add:
      - SYS_NICE
    volumes:
      - mysql-kc:/var/lib/mysql
    networks:
      - mediscreen-network
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      interval: 30s
      timeout: 10s
      retries: 5

  keycloak:
    container_name: keycloak
    build: ./keycloak
    image: keycloak
    ports:
      - 8070:8080
    restart: on-failure
    environment:
      JDBC_PARAMS: useSSL=false&allowPublicKeyRetrieval=true
    healthcheck:
      test: "curl --fail --silent localhost:8070/health | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 40s
    depends_on:
      mysql-kc:
        condition: service_healthy
    networks:
      - mediscreen-network
       
  config:
    container_name: config
    build: ./mediscreen-config
    image: config
    ports:
      - 8888:8888
    restart: on-failure
    healthcheck:
      test: "curl --fail --silent localhost:8888/actuator/health | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 40s
    networks:
      - mediscreen-network
       
  eureka:
    container_name: eureka
    build: ./mediscreen-discovery
    image: eureka
    ports:
      - 8761:8761
    restart: on-failure
    environment:
      - SPRING_CONFIG_IMPORT=configserver:http://config:8888
    healthcheck:
      test: "curl --fail --silent localhost:8761/actuator/health | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 40s
    depends_on:
      config:
        condition: service_healthy
    networks:
      - mediscreen-network
      
  mysql-patient:
    container_name: mysql-patient
    image: mysql:8.0.27
    ports:
      - 3308:3306
    restart: on-failure
    environment:
      MYSQL_USER: tipikae
      MYSQL_PASSWORD: 231045
      MYSQL_DATABASE: mediscreen
      MYSQL_ROOT_PASSWORD: root
    cap_add:
      - SYS_NICE
    volumes:
      - mysql-patient:/var/lib/mysql
    networks:
      - mediscreen-network
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      interval: 30s
      timeout: 10s
      retries: 5
      
  patient:
    container_name: patient
    build: ./patient-service
    image: patientservice
    restart: on-failure
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-patient:3306/mediscreen?enabledTLSProtocols=TLSv1.2
      - SPRING_CONFIG_IMPORT=configserver:http://config:8888
    healthcheck:
      test: "curl --fail --silent localhost:8081/actuator/health | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 40s
    depends_on:
      mysql-patient:
        condition: service_healthy
      eureka:
        condition: service_healthy
    networks:
      - mediscreen-network
      
  mongo-note:
    container_name: mongo-note
    image: mongo:latest
    restart: on-failure
    ports:
      - 27018:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: tipikae
      MONGO_INITDB_ROOT_PASSWORD: 231045
      MONGO_INITDB_DATABASE: mediscreen
    healthcheck:
      test:  ["CMD", "./mongodb/docker-healthcheck"]
      interval: 10s
      timeout: 2s
      retries: 10
    volumes:
      - ./mongodb/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - mongo-note:/var/lib/mongodb
    networks:
      - mediscreen-network
      
  note:
    container_name: note
    build: ./note-service
    image: noteservice
    restart: on-failure
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATA_MONGODB_HOST=mongo-note
      - SPRING_CONFIG_IMPORT=configserver:http://config:8888
    healthcheck:
      test: "curl --fail --silent localhost:8082/actuator/health | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 40s
    depends_on:
      mongo-note:
        condition: service_healthy
      eureka:
        condition: service_healthy
    networks:
      - mediscreen-network
      
  mysql-assessment:
    container_name: mysql-assessment
    image: mysql:8.0.27
    ports:
      - 3309:3306
    restart: on-failure
    environment:
      MYSQL_USER: tipikae
      MYSQL_PASSWORD: 231045
      MYSQL_DATABASE: mediscreen
      MYSQL_ROOT_PASSWORD: root
    cap_add:
      - SYS_NICE
    volumes:
      - mysql-assessment:/var/lib/mysql
    networks:
      - mediscreen-network
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      interval: 30s
      timeout: 10s
      retries: 5
      
  assessment:
    container_name: assessment
    build: ./assessment-service
    image: assessmentservice
    restart: on-failure
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-assessment:3306/mediscreen?enabledTLSProtocols=TLSv1.2
      - SPRING_CONFIG_IMPORT=configserver:http://config:8888
    healthcheck:
      test: "curl --fail --silent localhost:8083/actuator/health | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 40s
    depends_on:
      mysql-assessment:
        condition: service_healthy
      note:
        condition: service_healthy
      patient:
        condition: service_healthy
    networks:
      - mediscreen-network
      
  proxy:
    container_name: proxy
    build: ./mediscreen-proxy
    image: proxy
    ports:
      - 8080:8080
    restart: on-failure
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER-URI=http://keycloak:8070/realms/mediscreen
      - SPRING_CONFIG_IMPORT=configserver:http://config:8888
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 40s
    depends_on:
      assessment:
        condition: service_healthy
    networks:
      - mediscreen-network
      
  frontend:
    container_name: frontend
    build: ./mediscreen-UI
    image: frontend
    ports:
      - 8090:8090
    restart: on-failure
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_CONFIG_IMPORT=configserver:http://config:8888
    healthcheck:
      test: "curl --fail --silent localhost:8090/actuator/health | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 40s
    depends_on:
      proxy:
        condition: service_healthy
    networks:
      - mediscreen-network

networks:
  mediscreen-network:

volumes:
  mysql-kc:
  mysql-patient:
  mysql-assessment:
  mongo-note:
